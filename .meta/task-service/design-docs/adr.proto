// adr.proto
syntax = "proto3";

package adr.v1;

// Architecture Decision Record
message ADR {
  // Metadata
  string id = 1;                    // e.g., "P1.1" or "ADR-001"
  string title = 2;                 // Brief title
  string status = 3;                // draft, active, superseded, deprecated
  int64 created_at = 4;             // Unix timestamp
  int64 updated_at = 5;             // Unix timestamp
  string author = 6;                // Who created this
  repeated string tags = 7;         // e.g., ["architecture", "testing"]
  
  // Problem context
  ProblemStatement problem = 8;
  
  // Solution space
  repeated Option options = 9;      // All options considered
  Decision decision = 10;           // The chosen option
  
  // Success measurement
  SuccessCriteria success = 11;
  
  // Lifecycle management
  repeated Trigger triggers = 12;   // When to revisit
  RiskAssessment risks = 13;        // Risks and migration
  
  // Relationships
  repeated string supersedes = 14;  // ADR IDs this replaces
  repeated string related = 15;     // Related ADR IDs
}

message ProblemStatement {
  string statement = 1;             // What are we solving?
  ProblemStack stack = 2;           // Where in hierarchy
  Impact impact = 3;                // Why this matters
}

message ProblemStack {
  string parent_id = 1;             // Parent problem ID
  repeated string children_ids = 2; // Child problem IDs
  string level = 3;                 // strategic, architectural, tactical, operational
}

message Impact {
  repeated string areas = 1;        // What's affected (e.g., "testing", "build time")
  repeated string risks = 2;        // What happens if not solved
  string severity = 3;              // low, medium, high, critical
}

message Option {
  string id = 1;                    // e.g., "option_a"
  string name = 2;                  // Short name
  string description = 3;           // What is this option
  repeated string pros = 4;         // Advantages
  repeated string cons = 5;         // Disadvantages
  string tradeoffs = 6;             // Key tradeoff summary
  repeated string research_links = 7; // References/research
}

message Decision {
  string chosen_option_id = 1;      // Which option was chosen
  string rationale = 2;             // Why this option
  string implementation_notes = 3;  // How to implement
}

message SuccessCriteria {
  repeated string criteria = 1;     // Concrete, testable outcomes
  Metrics metrics = 2;              // What to measure
}

message Metrics {
  repeated Metric quantitative = 1; // Numbers to track
  repeated string qualitative = 2;  // Feedback/observations
}

message Metric {
  string name = 1;                  // e.g., "build_time"
  string target = 2;                // e.g., "< 30s"
  string unit = 3;                  // e.g., "seconds"
}

message Trigger {
  string id = 1;                    // e.g., "coupling_detected"
  string name = 2;                  // Human-readable name
  string condition = 3;             // What to observe
  string severity = 4;              // How urgent to revisit
}

message RiskAssessment {
  repeated Risk risks = 1;          // Risks of chosen option
  MigrationCost migration = 2;      // Cost to change/rollback
}

message Risk {
  string description = 1;           // What could go wrong
  string mitigation = 2;            // How to address it
  string severity = 3;              // low, medium, high
}

message MigrationCost {
  repeated MigrationPath paths = 1; // Possible migrations
  string rollback_cost = 2;         // Cost to undo decision
}

message MigrationPath {
  string to_option_id = 1;          // Migrate to which option
  string cost = 2;                  // low, medium, high
  string effort = 3;                // Time estimate
  repeated string steps = 4;        // Migration steps
}
